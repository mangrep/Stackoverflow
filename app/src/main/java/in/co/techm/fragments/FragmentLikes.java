package in.co.techm.fragments;


import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

import com.android.volley.AuthFailureError;
import com.android.volley.NetworkError;
import com.android.volley.NoConnectionError;
import com.android.volley.ParseError;
import com.android.volley.ServerError;
import com.android.volley.TimeoutError;
import com.android.volley.VolleyError;

import in.co.techm.adapters.AdapterQuestions;
import in.co.techm.callbacks.SearchLoadedListener;
import in.co.techm.extras.QuestionSorter;
import in.co.techm.extras.SortListener;
import in.co.techm.logging.L;
import in.co.techm.pharmeasy.R;
import in.co.techm.pojo.response.ListQuestion;
import in.co.techm.task.TaskSearchByTag;

/**
 * A simple {@link Fragment} subclass.
 * Use the {@link FragmentLikes#newInstance} factory method to
 * create an instance of this fragment.
 */
public class FragmentLikes extends Fragment implements SortListener, SearchLoadedListener {
    //The key used to store questions objects to and from parcelable
    private static final String STATE_QUESTIONS = "state_questions";
    //the arraylist containing our list of box office his
    private ListQuestion mSearchResponse;
    //the adapter responsible for displaying our movies within a RecyclerView
    private AdapterQuestions mAdapter;
    //the recyclerview containing showing all our movies
    private RecyclerView mRecyclerQuestionList;
    //the TextView containing error messages generated by Volley
    private TextView mTextError;
    //the sorter responsible for sorting our movie results based on choice made by the user in the FAB
    private QuestionSorter mSorter = new QuestionSorter();

    public FragmentLikes() {
        // Required empty public constructor
    }

    /**
     * Use this factory method to create a new instance of
     * this fragment using the provided parameters.
     *
     * @param param1 Parameter 1.
     * @param param2 Parameter 2.
     * @return A new instance of fragment FragmentLikes.
     */
    public static FragmentLikes newInstance(String param1, String param2) {
        FragmentLikes fragment = new FragmentLikes();
        Bundle args = new Bundle();
        fragment.setArguments(args);
        return fragment;
    }

    public void sortByViewCount() {
//        mSorter.sortByViewCount(mListMovies);
        mAdapter.notifyDataSetChanged();
    }

    @Override
    public void onSortByCreationDate() {
//        mSorter.sortQuestionsByCreationDate(mListMovies);
        mAdapter.notifyDataSetChanged();
    }

    @Override
    public void onSortByVotes() {
//        mSorter.sortQuestionByVotes(mListMovies);
        mAdapter.notifyDataSetChanged();
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        // Inflate the layout for this fragment
        View layout = inflater.inflate(R.layout.fragment_stackoverflow_questions, container, false);
        mTextError = (TextView) layout.findViewById(R.id.textVolleyError);
        mRecyclerQuestionList = (RecyclerView) layout.findViewById(R.id.listQuestionList);
        //set the layout manager before trying to display data
        mRecyclerQuestionList.setLayoutManager(new LinearLayoutManager(getActivity()));
        mAdapter = new AdapterQuestions(getActivity(), false);
        mRecyclerQuestionList.setAdapter(mAdapter);

        if (savedInstanceState != null) {
            //if this fragment starts after a rotation or configuration change, load the existing Questions from a parcelable
            mSearchResponse = savedInstanceState.getParcelable(STATE_QUESTIONS);
        } else {
            //if this fragment starts for the first time, load the list of Questions from a database
//            mListQuestions = MyApplication.getWritableDatabase().readQuestions(DBQuestions.TABLE_QUESTIONS);
            //if the database is empty, trigger an AsycnTask to download movie list from the web
            if (mSearchResponse == null) {
                L.m("FragmentStackoverflowQuestion search: executing task from fragment");
                new TaskSearchByTag(this).execute("android");//TODO tag addition
            }
        }
        //update your Adapter to containg the retrieved Questions
        mAdapter.setQuestions(mSearchResponse);
        return layout;
    }

    @Override
    public void onSaveInstanceState(Bundle outState) {
        super.onSaveInstanceState(outState);
        //save the response to a parcelable prior to rotation or configuration change
        outState.putParcelable(STATE_QUESTIONS, mSearchResponse);
    }

    private void handleVolleyError(VolleyError error) {
        //if any error occurs in the network operations, show the TextView that contains the error message
        mTextError.setVisibility(View.VISIBLE);
        if (error instanceof TimeoutError || error instanceof NoConnectionError) {
            mTextError.setText(R.string.error_timeout);

        } else if (error instanceof AuthFailureError) {
            mTextError.setText(R.string.error_auth_failure);
            //TODO
        } else if (error instanceof ServerError) {
            mTextError.setText(R.string.error_auth_failure);
            //TODO
        } else if (error instanceof NetworkError) {
            mTextError.setText(R.string.error_network);
            //TODO
        } else if (error instanceof ParseError) {
            mTextError.setText(R.string.error_parser);
            //TODO
        }
    }

    @Override
    public void onUpcomingMoviesLoaded(ListQuestion listQuestion) {
        mAdapter.setQuestions(listQuestion);
    }
}
